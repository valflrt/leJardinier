import { ButtonInteraction } from "discord.js";

import GuildModel from "../../features/database/models/guild";

import reactions from "../../assets/reactions";

/**
 * Handles autorole requests
 * @param i interaction generated by the event listener
 */
const autoroleHandler = async (i: ButtonInteraction) => {
  /**
   * Fetches guild from database, skips if not found
   */
  let guildFromDB = await GuildModel.findOne({ id: i.guildId });
  if (
    !guildFromDB?.autorole ||
    !guildFromDB.autorole.some((v) => v.messageId === i.message.id)
  )
    return i.reply({ content: `Failed to issue role !`, ephemeral: true });

  /**
   * Finds the autorole object from database
   */
  let autorole = guildFromDB.autorole.find(
    (v) => v.messageId === i.message.id
  )!;

  /**
   * Finds the user roles object
   */
  let memberRoles = (await i.guild!.members.fetch(i.user.id)).roles;

  /**
   * Creates a promise that wait for all the promises waiting for their role to be added to the user
   */
  Promise.all(autorole.roleIds.map((roleId) => memberRoles.add(roleId)))
    .then(() =>
      i.reply({
        content: `Role${autorole.roleIds.length > 1 ? "s" : ""} issued ${
          reactions.smile.random
        }`,
        ephemeral: true,
      })
    )
    .catch(() =>
      i.reply({
        content: `Failed to issue role${
          autorole.roleIds.length > 1 ? "s" : ""
        } !`,
        ephemeral: true,
      })
    );
};

export default autoroleHandler;
